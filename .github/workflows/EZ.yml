# ワークフローの名前
name: Gmailアドレス漏洩チェック

# ワークフローのトリガー設定
on:
  workflow_dispatch:
    inputs:
      email:
        description: 'チェックしたいGmailアドレス'
        required: true
        type: string

# ワークフローが実行するジョブを定義
jobs:
  breach-checker:
    runs-on: ubuntu-latest
    steps:
      # ステップ1: 必要なツールをインストール
      - name: 必要なツールをインストール (curl, jq)
        run: sudo apt-get update && sudo apt-get install -y curl jq

      # ステップ2: Gmailアドレスのチェックを実行
      - name: 漏洩チェックの実行
        run: |
          EMAIL="${{ github.event.inputs.email }}"
          
          echo "=================================================="
          echo "Gmailアドレス漏洩チェックを開始します: $EMAIL"
          echo "=================================================="
          
          # --- 構文チェック ---
          echo -e "\n--- 1. 構文チェック ---"
          if [[ "$EMAIL" =~ ^[a-zA-Z0-9._%+-]+@gmail\.com$ ]]; then
            echo "✅ Gmailアドレスの形式: OK"
          else
            echo "❌ Gmailアドレスの形式: NG - 正しいGmailアドレスではありません。"
            exit 1
          fi

          # --- Have I Been Pwned? APIによる漏洩チェック ---
          echo -e "\n--- 2. データ漏洩履歴のチェック (Have I Been Pwned?) ---"
          # HIBP APIにリクエストを送信し、HTTPステータスコードを取得
          # APIは見つかれば200、見つからなければ404を返す
          API_URL="https://haveibeenpwned.com/api/v3/breachedaccount/${EMAIL}"
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -H "hibp-api-key: YOUR_API_KEY_HERE" "$API_URL")

          if [ "$HTTP_STATUS" -eq 200 ]; then
            echo "❌ 警告: このメールアドレスは過去のデータ漏洩で発見されました！"
            echo "漏洩したサービスと情報の詳細は以下の通りです:"
            
            # ステータスが200の場合、再度APIを叩いてJSONレスポンスを取得し、jqで整形して表示
            RESPONSE_JSON=$(curl -s -H "hibp-api-key: YOUR_API_KEY_HERE" "$API_URL")
            echo "$RESPONSE_JSON" | jq -r '.[] | "  - サービス名: \(.Name)\n    漏洩日: \(.BreachDate)\n    漏洩データ: \(.DataClasses | join(", "))\n"'
            
          elif [ "$HTTP_STATUS" -eq 404 ]; then
            echo "✅ 安全: このメールアドレスは既知のデータ漏洩では発見されませんでした。"
          else
            echo "⚠️ 不明: チェック中にエラーが発生しました。 (HTTPステータス: $HTTP_STATUS)"
            echo "APIキーが設定されていないか、HIBPサービスが一時的に利用できない可能性があります。"
          fi
          
          echo -e "\nチェック完了"
          
          # HIBP APIキーについての注意喚起
          echo -e "\n【注意】\nこのスクリプトはHave I Been Pwned?のAPI v3を使用しています。\nAPIを頻繁に利用する場合は、公式サイト (https://haveibeenpwned.com/API/Key) でAPIキーを取得し、\nワークフローファイルの 'YOUR_API_KEY_HERE' の部分を置き換えるか、GitHubのSecretsにキーを設定してください。"
