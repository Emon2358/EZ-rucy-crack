name: Test Twitter Keys

on:
  workflow_dispatch:

jobs:
  test-keys:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install tweepy

      - name: Verify Twitter API keys availability
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_KEY_SECRET: ${{ secrets.CONSUMER_KEY_SECRET }}
        run: |
          python -c "import os; \
          key = os.environ.get('CONSUMER_KEY'); \
          secret = os.environ.get('CONSUMER_KEY_SECRET'); \
          assert key, 'CONSUMER_KEY is not set in the environment.'; \
          assert secret, 'CONSUMER_KEY_SECRET is not set in the environment.'; \
          print('Both CONSUMER_KEY and CONSUMER_KEY_SECRET are available!')"

      - name: Reverse lookup API key owner
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_KEY_SECRET: ${{ secrets.CONSUMER_KEY_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
        run: |
          python -c "import tweepy, os, json; \
          consumer_key = os.environ.get('CONSUMER_KEY'); \
          consumer_secret = os.environ.get('CONSUMER_KEY_SECRET'); \
          access_token = os.environ.get('ACCESS_TOKEN'); \
          access_token_secret = os.environ.get('ACCESS_TOKEN_SECRET'); \
          assert consumer_key, 'CONSUMER_KEY is missing'; \
          assert consumer_secret, 'CONSUMER_KEY_SECRET is missing'; \
          assert access_token, 'ACCESS_TOKEN is missing'; \
          assert access_token_secret, 'ACCESS_TOKEN_SECRET is missing'; \
          auth = tweepy.OAuthHandler(consumer_key, consumer_secret); \
          auth.set_access_token(access_token, access_token_secret); \
          api = tweepy.API(auth, wait_on_rate_limit=True); \
          user = api.verify_credentials(); \
          if user: \
              print('API key owner info:'); \
              print(json.dumps(user._json, indent=2)); \
          else: \
              print('Failed to verify credentials.')"
